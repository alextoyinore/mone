"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/songs/page",{

/***/ "(app-pages-browser)/./src/contexts/AudioPlayerContext.jsx":
/*!*********************************************!*\
  !*** ./src/contexts/AudioPlayerContext.jsx ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AudioPlayerProvider: () => (/* binding */ AudioPlayerProvider),\n/* harmony export */   useAudioPlayer: () => (/* binding */ useAudioPlayer)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ AudioPlayerProvider,useAudioPlayer auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst AudioPlayerContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\nconst AudioPlayerProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const [currentSong, setCurrentSong] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isPlaying, setIsPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [progress, setProgress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const audioRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const extractStringProperty = function(obj, props) {\n        let fallback = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 'Unknown';\n        for (let prop of props){\n            if (obj && typeof obj[prop] === 'string') {\n                return obj[prop];\n            }\n        }\n        return fallback;\n    };\n    const playSong = (song)=>{\n        // Comprehensive logging function\n        const logSongDetails = (action, details)=>{\n            console.log(\"AudioPlayer: \".concat(action), {\n                songId: details._id,\n                title: details.title,\n                artist: details.artist,\n                audioUrl: details.audioUrl ? '[PRESENT]' : '[MISSING]'\n            });\n        };\n        // Defensive parsing of song object\n        const parseSongValue = function(value) {\n            let fallback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : '', propertyName = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 'unknown';\n            try {\n                // Ensure only primitive values are used\n                if (value === null || value === undefined) {\n                    console.warn(\"Fallback used for \".concat(propertyName, \": no value provided\"));\n                    return fallback;\n                }\n                if (typeof value === 'string' || typeof value === 'number') return value;\n                if (typeof value === 'object') {\n                    if (value.toString) return value.toString();\n                    console.warn(\"Complex object encountered for \".concat(propertyName));\n                    return fallback;\n                }\n                return fallback;\n            } catch (error) {\n                console.error(\"Error parsing \".concat(propertyName, \":\"), error);\n                return fallback;\n            }\n        };\n        // Create a new object with strictly primitive values\n        const songData = {\n            _id: parseSongValue(song._id, '', '_id'),\n            title: parseSongValue(song.name || song.title, 'Unknown Song', 'title'),\n            artist: parseSongValue(song.artist, 'Unknown Artist', 'artist'),\n            coverArt: parseSongValue(song.coverArt, 'https://placehold.co/64x64', 'coverArt'),\n            audioUrl: parseSongValue(song.audioUrl || song.url, '', 'audioUrl')\n        };\n        // Validate song object\n        if (!songData._id || !songData.audioUrl) {\n            console.error('Invalid song: Missing critical properties', {\n                providedSong: song,\n                parsedSong: songData\n            });\n            return;\n        }\n        // Log song details before playing\n        logSongDetails('Attempting to play', songData);\n        // If a different song is selected, reset progress\n        if ((currentSong === null || currentSong === void 0 ? void 0 : currentSong._id) !== songData._id) {\n            setProgress(0);\n            console.log(\"Switching from \".concat(currentSong === null || currentSong === void 0 ? void 0 : currentSong._id, \" to \").concat(songData._id));\n        }\n        // Explicitly set only primitive values\n        setCurrentSong(songData);\n        try {\n            audioRef.current.src = songData.audioUrl;\n            audioRef.current.play().then(()=>{\n                console.log(\"Successfully started playing: \".concat(songData.title));\n            }).catch((error)=>{\n                console.error('Playback error:', {\n                    message: error.message,\n                    song: songData\n                });\n                setCurrentSong(null);\n                setIsPlaying(false);\n            });\n            setIsPlaying(true);\n        } catch (setupError) {\n            console.error('Audio setup error:', {\n                error: setupError,\n                song: songData\n            });\n            setCurrentSong(null);\n            setIsPlaying(false);\n        }\n    };\n    const pauseSong = ()=>{\n        setIsPlaying(false);\n    };\n    const togglePlayPause = ()=>{\n        if (isPlaying) {\n            audioRef.current.pause();\n            setIsPlaying(false);\n        } else {\n            audioRef.current.play();\n            setIsPlaying(true);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AudioPlayerProvider.useEffect\": ()=>{\n            const audioElement = audioRef.current;\n            const updateProgress = {\n                \"AudioPlayerProvider.useEffect.updateProgress\": ()=>{\n                    if (audioElement) {\n                        const progressPercent = audioElement.currentTime / audioElement.duration * 100;\n                        setProgress(progressPercent);\n                    }\n                }\n            }[\"AudioPlayerProvider.useEffect.updateProgress\"];\n            const handleEnded = {\n                \"AudioPlayerProvider.useEffect.handleEnded\": ()=>{\n                    setIsPlaying(false);\n                    setProgress(0);\n                }\n            }[\"AudioPlayerProvider.useEffect.handleEnded\"];\n            if (audioElement) {\n                audioElement.addEventListener('timeupdate', updateProgress);\n                audioElement.addEventListener('ended', handleEnded);\n            }\n            return ({\n                \"AudioPlayerProvider.useEffect\": ()=>{\n                    if (audioElement) {\n                        audioElement.removeEventListener('timeupdate', updateProgress);\n                        audioElement.removeEventListener('ended', handleEnded);\n                    }\n                }\n            })[\"AudioPlayerProvider.useEffect\"];\n        }\n    }[\"AudioPlayerProvider.useEffect\"], [\n        currentSong\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AudioPlayerProvider.useEffect\": ()=>{\n            if (currentSong && isPlaying) {\n                audioRef.current.play();\n            } else if (currentSong && !isPlaying) {\n                audioRef.current.pause();\n            }\n        }\n    }[\"AudioPlayerProvider.useEffect\"], [\n        currentSong,\n        isPlaying\n    ]);\n    const seekTo = (percent)=>{\n        const audioElement = audioRef.current;\n        if (audioElement) {\n            const time = percent / 100 * audioElement.duration;\n            audioElement.currentTime = time;\n            setProgress(percent);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AudioPlayerContext.Provider, {\n        value: {\n            currentSong,\n            isPlaying,\n            progress,\n            playSong,\n            pauseSong,\n            togglePlayPause,\n            seekTo\n        },\n        children: [\n            children,\n            currentSong && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"audio\", {\n                ref: audioRef,\n                src: currentSong.audioUrl,\n                preload: \"metadata\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\toyin\\\\Documents\\\\node\\\\mone\\\\src\\\\contexts\\\\AudioPlayerContext.jsx\",\n                lineNumber: 181,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\toyin\\\\Documents\\\\node\\\\mone\\\\src\\\\contexts\\\\AudioPlayerContext.jsx\",\n        lineNumber: 168,\n        columnNumber: 5\n    }, undefined);\n};\n_s(AudioPlayerProvider, \"IPTSDVgRWPItXDMNoFXzvMX/35g=\");\n_c = AudioPlayerProvider;\nconst useAudioPlayer = ()=>{\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AudioPlayerContext);\n    if (!context) {\n        throw new Error(\"useAudioPlayer must be used within an AudioPlayerProvider\");\n    }\n    return context;\n};\n_s1(useAudioPlayer, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AudioPlayerProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/contexts/AudioPlayerContext.jsx\n"));

/***/ })

});