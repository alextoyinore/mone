"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/songs/page",{

/***/ "(app-pages-browser)/./src/contexts/AudioPlayerContext.jsx":
/*!*********************************************!*\
  !*** ./src/contexts/AudioPlayerContext.jsx ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AudioPlayerProvider: () => (/* binding */ AudioPlayerProvider),\n/* harmony export */   useAudioPlayer: () => (/* binding */ useAudioPlayer)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ AudioPlayerProvider,useAudioPlayer auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst AudioPlayerContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\nconst AudioPlayerProvider = (param)=>{\n    let { children } = param;\n    _s();\n    // Store songs list for navigation\n    const [songsList, setSongsList] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Loop modes: 0 = No Loop, 1 = Loop One, 2 = Loop All\n    const [loopMode, setLoopMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isShuffling, setIsShuffling] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [currentSong, setCurrentSong] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isPlaying, setIsPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [progress, setProgress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const audioRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Method to set the entire songs list for playback\n    const setSongsForPlayback = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AudioPlayerProvider.useCallback[setSongsForPlayback]\": (songs)=>{\n            setSongsList(songs || []);\n        }\n    }[\"AudioPlayerProvider.useCallback[setSongsForPlayback]\"], []);\n    // Ensure audio element is always available\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AudioPlayerProvider.useEffect\": ()=>{\n            // Initialize audio element if not exists\n            if (!audioRef.current) {\n                initializeAudioElement();\n            }\n            // Cleanup function\n            return ({\n                \"AudioPlayerProvider.useEffect\": ()=>{\n                    if (audioRef.current) {\n                        audioRef.current.pause();\n                        audioRef.current = null;\n                    }\n                }\n            })[\"AudioPlayerProvider.useEffect\"];\n        }\n    }[\"AudioPlayerProvider.useEffect\"], [\n        initializeAudioElement\n    ]);\n    // Seek to a specific point in the song\n    const seekTo = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AudioPlayerProvider.useCallback[seekTo]\": (percentage)=>{\n            if (!audioRef.current) {\n                console.warn('Cannot seek: No audio element');\n                return;\n            }\n            // Validate percentage\n            const validPercentage = Math.max(0, Math.min(100, percentage));\n            // Calculate time based on percentage\n            const time = validPercentage / 100 * audioRef.current.duration;\n            try {\n                audioRef.current.currentTime = time;\n                setProgress(validPercentage);\n            } catch (error) {\n                console.error('Error seeking in audio:', error);\n            }\n        }\n    }[\"AudioPlayerProvider.useCallback[seekTo]\"], []);\n    const playSong = (song)=>{\n        // Defensive parsing of song object\n        const parseSongValue = function(value) {\n            let fallback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : '';\n            if (value === null || value === undefined) return fallback;\n            if (typeof value === 'string' || typeof value === 'number') return value;\n            if (typeof value === 'object' && value.toString) return value.toString();\n            return fallback;\n        };\n        // Create a new object with strictly primitive values\n        const songData = {\n            _id: parseSongValue(song._id),\n            title: parseSongValue(song.name || song.title, 'Unknown Song'),\n            artist: parseSongValue(song.artist, 'Unknown Artist'),\n            coverArt: parseSongValue(song.coverArt, 'https://placehold.co/64x64'),\n            audioUrl: parseSongValue(song.audioUrl || song.url)\n        };\n        // Validate song object\n        if (!songData._id || !songData.audioUrl) {\n            console.error('Invalid song: Missing required properties', song);\n            return;\n        }\n        // Ensure audioRef is available\n        if (!audioRef.current) {\n            console.error('Audio element not initialized');\n            return;\n        }\n        // If the same song is currently playing, pause it\n        if ((currentSong === null || currentSong === void 0 ? void 0 : currentSong._id) === songData._id && isPlaying) {\n            togglePlayPause();\n            return;\n        }\n        // If a different song is selected, reset progress\n        if ((currentSong === null || currentSong === void 0 ? void 0 : currentSong._id) !== songData._id) {\n            setProgress(0);\n        }\n        try {\n            // Explicitly set only primitive values\n            setCurrentSong(songData);\n            audioRef.current.src = songData.audioUrl;\n            audioRef.current.play().catch((error)=>{\n                console.error('Error playing song:', error);\n                setCurrentSong(null);\n                setIsPlaying(false);\n            });\n            setIsPlaying(true);\n        } catch (error) {\n            console.error('Unexpected error in playSong:', error);\n            setCurrentSong(null);\n            setIsPlaying(false);\n        }\n    };\n    const pauseSong = ()=>{\n        setIsPlaying(false);\n    };\n    const togglePlayPause = ()=>{\n        if (!currentSong) {\n            console.warn('Cannot toggle play/pause: No song selected');\n            return;\n        }\n        if (!audioRef.current) {\n            console.error('Audio element not initialized');\n            return;\n        }\n        try {\n            if (isPlaying) {\n                audioRef.current.pause();\n                setIsPlaying(false);\n            } else {\n                audioRef.current.play().catch((error)=>{\n                    console.error('Error playing song:', error);\n                    setIsPlaying(false);\n                });\n                setIsPlaying(true);\n            }\n        } catch (error) {\n            console.error('Unexpected error in togglePlayPause:', error);\n            setIsPlaying(false);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AudioPlayerProvider.useEffect\": ()=>{\n            const audioElement = audioRef.current;\n            const updateProgress = {\n                \"AudioPlayerProvider.useEffect.updateProgress\": ()=>{\n                    if (audioElement) {\n                        const progressPercent = audioElement.currentTime / audioElement.duration * 100;\n                        setProgress(progressPercent);\n                    }\n                }\n            }[\"AudioPlayerProvider.useEffect.updateProgress\"];\n            const handleEnded = {\n                \"AudioPlayerProvider.useEffect.handleEnded\": ()=>{\n                    // If there are songs in the playlist, automatically play the next song\n                    if (songsList.length > 0) {\n                        playNextSong();\n                    } else {\n                        // If no playlist, just stop playback\n                        setIsPlaying(false);\n                        setProgress(0);\n                    }\n                }\n            }[\"AudioPlayerProvider.useEffect.handleEnded\"];\n            if (audioElement) {\n                audioElement.addEventListener('timeupdate', updateProgress);\n                audioElement.addEventListener('ended', handleEnded);\n            }\n            return ({\n                \"AudioPlayerProvider.useEffect\": ()=>{\n                    if (audioElement) {\n                        audioElement.removeEventListener('timeupdate', updateProgress);\n                        audioElement.removeEventListener('ended', handleEnded);\n                    }\n                }\n            })[\"AudioPlayerProvider.useEffect\"];\n        }\n    }[\"AudioPlayerProvider.useEffect\"], [\n        currentSong,\n        songsList,\n        playNextSong\n    ]);\n    // Add global spacebar event listener for play/pause\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AudioPlayerProvider.useEffect\": ()=>{\n            const handleKeyDown = {\n                \"AudioPlayerProvider.useEffect.handleKeyDown\": (event)=>{\n                    // Check if spacebar is pressed and not in an input field\n                    if (event.code === 'Space' && event.target.tagName !== 'INPUT' && event.target.tagName !== 'TEXTAREA') {\n                        // Prevent default spacebar behavior (scrolling)\n                        event.preventDefault();\n                        // Only toggle if a song is playing\n                        if (currentSong) {\n                            togglePlayPause();\n                        }\n                    }\n                }\n            }[\"AudioPlayerProvider.useEffect.handleKeyDown\"];\n            // Add global event listener\n            window.addEventListener('keydown', handleKeyDown);\n            // Cleanup\n            return ({\n                \"AudioPlayerProvider.useEffect\": ()=>{\n                    window.removeEventListener('keydown', handleKeyDown);\n                }\n            })[\"AudioPlayerProvider.useEffect\"];\n        }\n    }[\"AudioPlayerProvider.useEffect\"], [\n        currentSong,\n        togglePlayPause\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AudioPlayerProvider.useEffect\": ()=>{\n            if (currentSong && isPlaying) {\n                audioRef.current.play();\n            } else if (currentSong && !isPlaying) {\n                audioRef.current.pause();\n            }\n        }\n    }[\"AudioPlayerProvider.useEffect\"], [\n        currentSong,\n        isPlaying\n    ]);\n    // Play next song in the playlist\n    const playNextSong = ()=>{\n        if (!currentSong || songsList.length === 0) return;\n        // Find current song's index\n        const currentIndex = songsList.findIndex((song)=>song._id === currentSong._id);\n        // Determine next song index\n        const nextIndex = (currentIndex + 1) % songsList.length;\n        // Play the next song\n        playSong(songsList[nextIndex]);\n    };\n    // Play previous song in the playlist\n    const playPreviousSong = ()=>{\n        if (!currentSong || songsList.length === 0) return;\n        // Find current song's index\n        const currentIndex = songsList.findIndex((song)=>song._id === currentSong._id);\n        // Determine previous song index\n        const prevIndex = (currentIndex - 1 + songsList.length) % songsList.length;\n        // Play the previous song\n        playSong(songsList[prevIndex]);\n    };\n    // Initialize audio element\n    const initializeAudioElement = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AudioPlayerProvider.useCallback[initializeAudioElement]\": ()=>{\n            // Always create a new Audio element to ensure clean state\n            const audioElement = new Audio();\n            // Setup event listeners\n            audioElement.addEventListener('timeupdate', {\n                \"AudioPlayerProvider.useCallback[initializeAudioElement]\": ()=>{\n                    if (audioElement.duration) {\n                        setProgress(audioElement.currentTime / audioElement.duration * 100);\n                    }\n                }\n            }[\"AudioPlayerProvider.useCallback[initializeAudioElement]\"]);\n            audioElement.addEventListener('ended', {\n                \"AudioPlayerProvider.useCallback[initializeAudioElement]\": ()=>{\n                    // When song ends, play next song or reset\n                    playNextSong();\n                }\n            }[\"AudioPlayerProvider.useCallback[initializeAudioElement]\"]);\n            // Store reference\n            audioRef.current = audioElement;\n            return audioElement;\n        }\n    }[\"AudioPlayerProvider.useCallback[initializeAudioElement]\"], [\n        playNextSong,\n        setProgress\n    ]);\n    const contextValue = {\n        currentSong,\n        isPlaying,\n        loopMode,\n        isShuffling,\n        songsList,\n        progress,\n        playSong,\n        pauseSong,\n        togglePlayPause,\n        seekTo,\n        playNextSong,\n        playPreviousSong,\n        setSongsForPlayback\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AudioPlayerContext.Provider, {\n        value: contextValue,\n        children: [\n            children,\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"audio\", {\n                ref: audioRef\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\toyin\\\\Documents\\\\node\\\\mone\\\\src\\\\contexts\\\\AudioPlayerContext.jsx\",\n                lineNumber: 293,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\toyin\\\\Documents\\\\node\\\\mone\\\\src\\\\contexts\\\\AudioPlayerContext.jsx\",\n        lineNumber: 291,\n        columnNumber: 5\n    }, undefined);\n};\n_s(AudioPlayerProvider, \"RANSvHHa/gu53656C9dy4ASn5O8=\");\n_c = AudioPlayerProvider;\nconst useAudioPlayer = ()=>{\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AudioPlayerContext);\n    if (!context) {\n        throw new Error(\"useAudioPlayer must be used within an AudioPlayerProvider\");\n    }\n    return context;\n};\n_s1(useAudioPlayer, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AudioPlayerProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/contexts/AudioPlayerContext.jsx\n"));

/***/ })

});